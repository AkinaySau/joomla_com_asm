<?php
/**
 * Created by PhpStorm.
 * User: sau
 * Date: 22.03.18
 * Time: 12:17
 */

use Joomla\CMS\Factory;
use Joomla\CMS\MVC\Model\AdminModel;
use Joomla\CMS\Table\Table;
use Sau\Joomla\ASM\Component;
use Sau\Joomla\ASM\CyrToLat;

class ASMModelPage extends AdminModel {

	/**
	 * Получаем Форму
	 *
	 * @param   array   $data     Data for the form.
	 * @param   boolean $loadData True if the form is to load its own data (default case), false if not.
	 *
	 * @return  \JForm|boolean  A \JForm object on success, false on failure
	 *
	 * @since   1.0
	 */
	public function getForm( $data = array(), $loadData = true ) {
		// TODO: Implement getForm() method.

		//		$jinput = JFactory::getApplication()->input;
		$form = $this->loadForm( Component::NAME . '.page', 'page', [
			'control'   => 'jform',
			'load_data' => $loadData
		] );

		if ( empty( $form ) ) {
			return false;
		}

		return $form;
	}

	/**
	 * Таблица с которой будем работать
	 *
	 * @param string $type
	 * @param string $prefix
	 * @param array  $config
	 *
	 * @return bool|Table
	 * @since 1.0
	 */
	public function getTable( $type = 'Page', $prefix = 'Table', $config = array() ) {
		return Table::getInstance( $type, $prefix, $config );
	}

	/**
	 * Получение данных
	 *
	 * @param null $pk
	 *
	 * @return bool|object
	 * @since 1.0
	 */
	public function getItem( $pk = null ) {
		if ( $result = parent::getItem( $pk ) ) {
			$result->date_published = $result->date_published ?? date( 'Y-m-d' );
		}

		return $result;
	}

	protected function loadFormData() {
		try {

			if ( empty( $data = Factory::getApplication()
			                           ->getUserState( $this->option . '.edit.page.data', array() ) ) ) {
				throw new Exception( 'no data in POST method' );
			}
		} catch ( Exception $e ) {
			$data = $this->getItem();
		}

		return $data;
	}

	public function save( $data ) {
		if ( empty( $data[ 'alias' ] ) ) {
			$data[ 'alias' ] = str_replace( ' ', '-', $data[ 'title' ] );
		}
		$data[ 'alias' ] = CyrToLat::toLat( $data[ 'alias' ] );

		return parent::save( $data ); // TODO: Change the autogenerated stub
	}
}